{"version":3,"sources":["App.js","index.js"],"names":["App","_this$props","this","props","q","loading","results","handleSearchChange","react_default","a","createElement","className","id","defaultValue","style","fontSize","onChange","map","volume","link","thumbnail","title","authors","publisher","key","height","src","alt","href","target","rel","PureComponent","_state","e","agent","process","type","payload","value","on","ReactDOM","render","src_App_0","Object","assign","document","getElementById","store","createStore","state","arguments","length","undefined","_ref","objectSpread","toConsumableArray","concat","window","__REDUX_DEVTOOLS_EXTENSION__","filter","_ref2","action","dispatch","getState","_ref3","ajaxStreamingGet","url","expandKey","pipe","info","volumeInfo","canonicalVolumeLink","join","imageLinks","smallThumbnail","concatMap","after","endWith","concurrency","processResults","_ref5","select","location","hash","subscribe","allOfType","debounceTime"],"mappings":"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","file":"static/js/main.a5b7fc43.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport './App.css';\n\nclass App extends PureComponent {\n  render() {\n    const { q, loading, results, handleSearchChange } = this.props;\n    return (\n      <div className=\"App\">\n        <div>\n          <input\n            id=\"q\"\n            defaultValue={q}\n            style={{ fontSize: '2em' }}\n            onChange={handleSearchChange}\n          />\n          {loading && '‚è≥'}\n        </div>\n        <ul>\n          {(results || []).map(volume => {\n            const { id, link, thumbnail, title, authors, publisher } = volume;\n\n            return (\n              <li key={id}>\n                <img height=\"50\" src={thumbnail} alt={title} />\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {title} - {authors} - {publisher}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport { agent, after, ajaxStreamingGet } from 'antares-protocol';\nimport { map, filter, endWith, concatMap, debounceTime } from 'rxjs/operators';\n\nlet _state = {\n  q: 'quilting',\n  loading: false,\n  results: []\n};\n\nconst handleSearchChange = e => {\n  agent.process({\n    type: 'search/change',\n    payload: {\n      q: e.target.value\n    }\n  });\n};\nconst render = () => {\n  ReactDOM.render(\n    <App {..._state} handleSearchChange={handleSearchChange} />,\n    document.getElementById('root')\n  );\n};\n\n// ------------ Set up our consequences (HOW) ------------\nagent.on(/^search/, render);\n\n// Log synchronously with a filter.\n// Redux-lite-  manages our reduction (aggregation) of actions seen\nconst reduce = (state = _state, { type, payload }) => {\n  switch (type) {\n    case 'search/start':\n      return { ...state, q: payload.q, loading: true, results: [] };\n    case 'search/result':\n      return { ...state, results: [...state.results, payload] };\n    case 'search/complete':\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\nconst store = createStore(\n  reduce,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconst dispatch = action => {\n  store.dispatch(action);\n  _state = store.getState();\n  return _state;\n};\nagent.filter(/^search/, ({ action }) => dispatch(action));\n// prettier-ignore\nagent.on('search/start', ({ action }) => {\n    return ajaxStreamingGet({\n      url: 'https://www.googleapis.com/books/v1/volumes?q=' + action.payload.q,\n      expandKey: 'items'\n    }).pipe(\n      map(volume => {\n        const id = volume.id\n        const info = volume.volumeInfo || {};\n        const { title, publisher, canonicalVolumeLink: link } = info;\n        const authors = (info.authors || []).join(', ');\n        const { smallThumbnail: thumbnail } = info.imageLinks || {};\n        return {\n          type: 'search/result',\n          payload: {\n            id,\n            title,\n            authors,\n            link,\n            publisher,\n            thumbnail\n          }\n        };\n      }),\n      concatMap(action => after(500, () => action)),\n      endWith({\n        type: 'search/complete'\n      })\n    );\n  },\n  {\n    concurrency: 'cutoff',\n    processResults: true\n  }\n);\nagent.on('search/start', ({ action }) => {\n  document.getElementById('q').select();\n  document.location.hash = action.payload.q;\n});\n// ------------ Trigger our events (WHAT) ----------\nagent.process({ type: 'search/start', payload: { q: 'quilting' } });\n\nagent.subscribe(\n  agent.allOfType('search/change').pipe(\n    filter(action => (action.payload.q || '').length > 2),\n    debounceTime(700),\n    map(action => ({\n      type: 'search/start',\n      payload: { q: action.payload.q }\n    }))\n  )\n);\n"],"sourceRoot":""}